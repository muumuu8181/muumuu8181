AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Health Tracker WebSocket API and DynamoDB Infrastructure

Resources:
  HealthTrackerWebSocketApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: health-tracker-ws
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action

  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HealthTrackerWebSocketApi
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - /
        - - integrations
          - !Ref ConnectIntegration

  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HealthTrackerWebSocketApi
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - /
        - - integrations
          - !Ref DisconnectIntegration

  SyncRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HealthTrackerWebSocketApi
      RouteKey: sync
      AuthorizationType: NONE
      OperationName: SyncRoute
      Target: !Join
        - /
        - - integrations
          - !Ref SyncIntegration

  HealthTrackerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: health-tracker-table
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: version
          AttributeType: N
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: version-index
          KeySchema:
            - AttributeName: version
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: health-tracker-connections
      AttributeDefinitions:
        - AttributeName: connectionId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: connectionId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: user-connections
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  WebSocketLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource:
                  - !GetAtt HealthTrackerTable.Arn
                  - !GetAtt ConnectionsTable.Arn
                  - !Join
                    - ''
                    - - !GetAtt HealthTrackerTable.Arn
                      - '/index/*'
                  - !Join
                    - ''
                    - - !GetAtt ConnectionsTable.Arn
                      - '/index/*'
